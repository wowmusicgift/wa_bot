from flask import Flask, request
import requests
from openai import OpenAI
import os
import threading
import time

app = Flask(__name__)
client = OpenAI(api_key=os.environ.get("OPENAI_API_KEY"))

# Telegram config
TELEGRAM_BOT_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
TELEGRAM_API_URL = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"

# –•—Ä–∞–Ω–∏–ª–∏—â–∞
conversation_history = {}
last_message_time = {}
reply_timers = {}

@app.route("/")
def home():
    return "ü§ñ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route("/webhook", methods=["POST"])
def telegram_webhook():
    data = request.get_json()

    if not data or "message" not in data:
        return "ok"

    message = data["message"]
    chat_id = message["chat"]["id"]
    text = message.get("text", "").strip()

    if not text:
        return "ok"

    user_id = str(chat_id)

    if text.lower() == "memory_clean":
        conversation_history[user_id] = []
        send_message(chat_id, "–ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞. –ú–æ–∂–µ–º –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ üòä")
        return "ok"

    if user_id not in conversation_history:
        conversation_history[user_id] = []
        send_message(chat_id, "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! ‚ò∫Ô∏è –ß–µ–º –º–æ–∂–µ–º –ø–æ–º–æ—á—å? –•–æ—Ç–∏—Ç–µ –∫–æ–≥–æ-—Ç–æ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å? üòÅ")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
    last_message_time[user_id] = time.time()
    conversation_history[user_id].append({"role": "user", "content": text})
    conversation_history[user_id] = conversation_history[user_id][-50:]

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
    if user_id not in reply_timers or not reply_timers[user_id].is_alive():
        timer = threading.Timer(10.0, lambda: delayed_reply(user_id, chat_id))
        reply_timers[user_id] = timer
        timer.start()

    return "ok"

def delayed_reply(user_id, chat_id):
    if time.time() - last_message_time[user_id] < 10:
        return  # —á–µ–ª–æ–≤–µ–∫ –µ—â—ë –ø–∏—à–µ—Ç

    history = conversation_history.get(user_id, [])

    system_prompt = {
        "role": "system",
        "content": """
–í—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤ –ø–µ—Å–µ–Ω –∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π. –í—ã –ø–æ–º–æ–≥–∞–µ—Ç–µ –ª—é–¥—è–º —Å–æ–∑–¥–∞–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –ø–æ –∏—Ö –∏—Å—Ç–æ—Ä–∏–∏. –û–±—â–µ–Ω–∏–µ –≤–µ–¥—ë—Ç–µ –≤ Telegram.

–í—ã –≥–æ–≤–æ—Ä–∏—Ç–µ –æ—Ç –∏–º–µ–Ω–∏ –∫–æ–º–∞–Ω–¥—ã, —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∏ —Ç–µ–ø–ª–æ—Ç–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä: ‚Äú–ú—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é —Å–æ–∑–¥–∞–¥–∏–º –¥–ª—è –≤–∞—Å...‚Äù, ‚Äú–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º...‚Äù.

–í—ã –æ–±—Ä–∞—â–∞–µ—Ç–µ—Å—å –∫ –∫–ª–∏–µ–Ω—Ç—É –Ω–∞ ‚Äú–≤—ã‚Äù, –≤—Å–µ–≥–¥–∞ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 1‚Äì2 —Å–º–∞–π–ª–∏–∫–∞, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ –Ω–∞—á–∞–ª–µ –∏ —Ñ–∏–Ω–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∑–∞–±–æ—Ç—ã.

–í–∞—à —Å—Ç–∏–ª—å ‚Äî –∂–∏–≤–æ–π, —á–µ–ª–æ–≤–µ—á–Ω—ã–π, –ø–æ—ç—Ç–∏—á–Ω—ã–π. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —à–∞–±–ª–æ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã. –í–∞—à–∞ —Ü–µ–ª—å ‚Äî –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å.

–í—ã –Ω–µ –∑–∞–¥–∞—ë—Ç–µ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —É–∂–µ —É–∫–∞–∑–∞–ª, –∫–æ–º—É –±—É–¥–µ—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞ –∫–∞–∫–æ–π –ø–æ–≤–æ–¥ ‚Äî –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å —Å–Ω–æ–≤–∞.

–£—Ç–æ—á–Ω—è–π—Ç–µ:
‚Äì –ö–∞–∫–æ–π –ø–æ–≤–æ–¥? üéâ
‚Äì –ö–æ–º—É –∏–º–µ–Ω–Ω–æ? üíå
‚Äì –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ: –ø–µ—Å–Ω—è, —Å—Ç–∏—Ö, –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ? üé∂
‚Äì –ö–∞–∫–∏–µ —á—É–≤—Å—Ç–≤–∞ —Ö–æ—á–µ—Ç—Å—è –ø–µ—Ä–µ–¥–∞—Ç—å? ‚ù§Ô∏è
‚Äì –ï—Å—Ç—å –ª–∏ –æ—Å–æ–±–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–ª–∏ –º–æ–º–µ–Ω—Ç—ã? üìù

–ï—Å–ª–∏ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ ‚Äî —Å–æ–æ–±—â–∏—Ç–µ: ‚Äú–ú—ã —Å–æ–∑–¥–∞—ë–º –ø–µ—Å–Ω—é –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è üé∂‚Äù

–ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –¥–æ–ª–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç ‚Äî –º–æ–∂–Ω–æ –≤–µ–∂–ª–∏–≤–æ –Ω–∞–ø–æ–º–Ω–∏—Ç—å, –Ω–µ –Ω–∞–≤—è–∑—á–∏–≤–æ.

–í—ã –Ω–µ –≤—ã–¥–∞—ë—Ç–µ —Å–µ–±—è –∑–∞ –ò–ò ‚Äî –≤—ã –Ω–∞—Å—Ç–æ—è—â–∞—è –∫–æ–º–∞–Ω–¥–∞ –∞–≤—Ç–æ—Ä–æ–≤.
"""
    }

    full_history = [system_prompt] + history

    try:
        gpt_response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=full_history,
            max_tokens=1000,
            temperature=0.9
        )
        reply_text = gpt_response.choices[0].message.content.strip()
        send_message(chat_id, reply_text)

        # –î–æ–±–∞–≤–∏–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
        conversation_history[user_id].append({"role": "assistant", "content": reply_text})
        conversation_history[user_id] = conversation_history[user_id][-50:]

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ GPT:", e)

def send_message(chat_id, text):
    try:
        requests.post(TELEGRAM_API_URL, json={
            "chat_id": chat_id,
            "text": text
        })
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", e)
