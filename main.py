from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
from openai import OpenAI
import os
import threading
import time

from twilio.rest import Client as TwilioClient

app = Flask(__name__)
client = OpenAI(api_key=os.environ.get("OPENAI_API_KEY"))

conversation_history = {}
last_message_time = {}
reply_timers = {}
user_greeted = {}

@app.route("/", methods=["GET"])
def index():
    return "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route("/webhook", methods=["POST"])
def whatsapp_reply():
    user_number = request.values.get('From', '')
    incoming_msg = request.values.get('Body', '').strip()

    if not incoming_msg:
        return str(MessagingResponse().message("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å üòä"))

    # –û—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏
    if incoming_msg.lower() == "memory_clean":
        conversation_history[user_number] = []
        user_greeted[user_number] = False
        reply = MessagingResponse()
        reply.message("–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞. –ú–æ–∂–µ–º –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ üòä")
        return str(reply)

    last_message_time[user_number] = time.time()

    if user_number not in conversation_history:
        conversation_history[user_number] = []

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –µ—Å–ª–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
    if not user_greeted.get(user_number, False):
        user_greeted[user_number] = True
        reply = MessagingResponse()
        reply.message("–î–æ–±—Ä—ã–π –¥–µ–Ω—å! ‚ò∫Ô∏è –ß–µ–º –º–æ–∂–µ–º –ø–æ–º–æ—á—å? –•–æ—Ç–∏—Ç–µ –∫–æ–≥–æ-—Ç–æ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å? üòÅ")
        return str(reply)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    conversation_history[user_number].append({"role": "user", "content": incoming_msg})
    conversation_history[user_number] = conversation_history[user_number][-50:]

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –æ–Ω –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
    if user_number not in reply_timers or not reply_timers[user_number].is_alive():
        timer = threading.Timer(10.0, lambda: delayed_reply(user_number))
        reply_timers[user_number] = timer
        timer.start()

    return ('', 204)

def delayed_reply(user_number):
    if time.time() - last_message_time[user_number] < 10:
        return

    history = conversation_history.get(user_number, [])

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã
    if user_number.startswith("whatsapp:+7"):
        price_info = "–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Å–Ω–∏ ‚Äî 6490 —Ç–µ–Ω–≥–µ üá∞üáø"
    elif user_number.startswith("whatsapp:+992"):
        price_info = "–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Å–Ω–∏ ‚Äî 169 —Å–æ–º–æ–Ω–∏ üáπüáØ"
    else:
        price_info = "–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Ç–æ—á–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞–Ω—ã üåç"

    system_prompt = {
        "role": "system",
        "content": f"""
–í—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤ –ø–µ—Å–µ–Ω –∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π. –í—ã –ø–æ–º–æ–≥–∞–µ—Ç–µ –ª—é–¥—è–º —Å–æ–∑–¥–∞–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –ø–æ –∏—Ö –∏—Å—Ç–æ—Ä–∏–∏. –û–±—â–µ–Ω–∏–µ –≤–µ–¥—ë—Ç–µ –≤ WhatsApp.

–í—ã –≥–æ–≤–æ—Ä–∏—Ç–µ –æ—Ç –∏–º–µ–Ω–∏ –∫–æ–º–∞–Ω–¥—ã, —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∏ —Ç–µ–ø–ª–æ—Ç–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä: ‚Äú–ú—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é —Å–æ–∑–¥–∞–¥–∏–º –¥–ª—è –≤–∞—Å...‚Äù, ‚Äú–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º...‚Äù.

–í—ã –æ–±—Ä–∞—â–∞–µ—Ç–µ—Å—å –∫ –∫–ª–∏–µ–Ω—Ç—É –Ω–∞ ‚Äú–≤—ã‚Äù, –≤—Å–µ–≥–¥–∞ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 1‚Äì2 —Å–º–∞–π–ª–∏–∫–∞, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ –Ω–∞—á–∞–ª–µ –∏ —Ñ–∏–Ω–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∑–∞–±–æ—Ç—ã.

–í–∞—à —Å—Ç–∏–ª—å ‚Äî –∂–∏–≤–æ–π, —á–µ–ª–æ–≤–µ—á–Ω—ã–π, –ø–æ—ç—Ç–∏—á–Ω—ã–π. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —à–∞–±–ª–æ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã. –í–∞—à–∞ —Ü–µ–ª—å ‚Äî –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å.

–í—ã –Ω–µ –∑–∞–¥–∞—ë—Ç–µ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —É–∂–µ —É–∫–∞–∑–∞–ª, –∫–æ–º—É –±—É–¥–µ—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞ –∫–∞–∫–æ–π –ø–æ–≤–æ–¥ ‚Äî –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å —Å–Ω–æ–≤–∞.

–£—Ç–æ—á–Ω—è–π—Ç–µ:
‚Äì –ö–∞–∫–æ–π –ø–æ–≤–æ–¥? üéâ
‚Äì –ö–æ–º—É –∏–º–µ–Ω–Ω–æ? üíå
‚Äì –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ: –ø–µ—Å–Ω—è, —Å—Ç–∏—Ö, –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ? üé∂
‚Äì –ö–∞–∫–∏–µ —á—É–≤—Å—Ç–≤–∞ —Ö–æ—á–µ—Ç—Å—è –ø–µ—Ä–µ–¥–∞—Ç—å? ‚ù§Ô∏è
‚Äì –ï—Å—Ç—å –ª–∏ –æ—Å–æ–±–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–ª–∏ –º–æ–º–µ–Ω—Ç—ã? üìù

–ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ —Ü–µ–Ω—É ‚Äî –æ—Ç–≤–µ—á–∞–π—Ç–µ:
- –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω (+7): {price_info}
- –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω (+992): {price_info}
- –î—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã: ‚Äú–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Ç–æ—á–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞–Ω—ã üåç‚Äù

–ï—Å–ª–∏ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ ‚Äî —Å–æ–æ–±—â–∏—Ç–µ: ‚Äú–ú—ã —Å–æ–∑–¥–∞—ë–º –ø–µ—Å–Ω—é –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è üé∂‚Äù

–ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –¥–æ–ª–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç ‚Äî –º–æ–∂–Ω–æ –≤–µ–∂–ª–∏–≤–æ –Ω–∞–ø–æ–º–Ω–∏—Ç—å, –Ω–µ –Ω–∞–≤—è–∑—á–∏–≤–æ.

–í—ã –Ω–µ –≤—ã–¥–∞—ë—Ç–µ —Å–µ–±—è –∑–∞ –ò–ò ‚Äî –≤—ã –Ω–∞—Å—Ç–æ—è—â–∞—è –∫–æ–º–∞–Ω–¥–∞ –∞–≤—Ç–æ—Ä–æ–≤.
"""
    }

    messages = [system_prompt] + history

    try:
        gpt_response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=messages,
            max_tokens=1000,
            temperature=0.9
        )

        reply_text = gpt_response.choices[0].message.content.strip()

        twilio = TwilioClient(
            os.environ.get("TWILIO_ACCOUNT_SID"),
            os.environ.get("TWILIO_AUTH_TOKEN")
        )

        twilio.messages.create(
            from_=os.environ.get("TWILIO_WHATSAPP_NUMBER"),
            to=user_number,
            body=reply_text
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
        conversation_history[user_number].append({"role": "assistant", "content": reply_text})
        conversation_history[user_number] = conversation_history[user_number][-50:]

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ:", e)
