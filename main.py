from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
import os

app = Flask(__name__)

# –ú–µ—Å—Ç–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
user_context = {}

@app.route("/", methods=["GET"])
def index():
    return "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route("/webhook", methods=["POST"])
def whatsapp_reply():
    incoming_msg = request.values.get('Body', '').strip()
    sender = request.values.get('From', '')
    response = MessagingResponse()
    msg = response.message()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    if sender not in user_context:
        user_context[sender] = {'stage': 'start', 'data': {}}

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    user_data = user_context[sender]

    if incoming_msg:
        try:
            if user_data['stage'] == 'start':
                # –ù–∞—á–∞–ª–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞, –∑–∞–¥–∞–µ–º –Ω–∞–≤–æ–¥—è—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
                reply_text = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üòä –ß–µ–º –º–æ–∂–µ–º –ø–æ–º–æ—á—å? –ù–∞–ø—Ä–∏–º–µ—Ä, —Ö–æ—Ç–∏—Ç–µ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å –∫–æ–≥–æ-—Ç–æ?"
                user_data['stage'] = 'collect_info'  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–∞–¥–∏–∏
            elif user_data['stage'] == 'collect_info':
                # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                if 'name' not in user_data['data']:
                    user_data['data']['name'] = incoming_msg
                    reply_text = "–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ –∑–æ–≤—É—Ç —Ç–æ–≥–æ, –∫–æ–≥–æ –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º?"
                elif 'recipient_name' not in user_data['data']:
                    user_data['data']['recipient_name'] = incoming_msg
                    reply_text = "–û—Ç–ª–∏—á–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —á–µ–ª–æ–≤–µ–∫–µ: –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–≥–¥–∞ –≤—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å?"
                elif 'story' not in user_data['data']:
                    user_data['data']['story'] = incoming_msg
                    reply_text = "–•–æ—Ä–æ—à–æ! –ö–∞–∫–∏–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å? üòä"
                elif 'wishes' not in user_data['data']:
                    user_data['data']['wishes'] = incoming_msg
                    reply_text = "–°–ø–∞—Å–∏–±–æ! –ú—ã –Ω–∞—á–Ω–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –ø–µ—Å–Ω–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–∏–º –≤–∞–º –æ—Ç—Ä—ã–≤–∫–∏."
                    user_data['stage'] = 'waiting_payment'  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å—Ç–∞–¥–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è –æ–ø–ª–∞—Ç—ã
            elif user_data['stage'] == 'waiting_payment':
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã
                reply_text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É, –∏ –º—ã –Ω–∞—á–Ω–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –ø–µ—Å–Ω–µ–π."
            else:
                reply_text = "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ."

            msg.body(reply_text)

        except Exception as e:
            msg.body("–û—à–∏–±–∫–∞: " + str(e))

    else:
        msg.body("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å ‚Äî —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç :)")

    return str(response)
